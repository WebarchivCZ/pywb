---
- name: PyWb Deployment
  hosts: all
  tasks:
    - name: Ensure ACL installed to resolve permission issues
      become: "{{ sudo | default(true) }}"
      ansible.builtin.apt:
        name: acl,nginx
        state: present

    - name: Install virtualenv via pip
      become: "{{ sudo | default(true) }}"
      pip:
        name: virtualenv
        executable: pip3

    - name: User running pywb
      become: "{{ sudo | default(true) }}"
      ansible.builtin.user:
        name: "{{ owner }}"
        comment: Web archive replay system
        shell: /bin/bash
        create_home: yes

    - name: "Prepare pywb operation directory"
      become: "{{ sudo | default(true) }}"
      file:
        owner: "{{ owner | default(omit) }}"
        group: "{{ group | default(omit) }}"
        dest: "{{ pywb_dir }}"
        state: directory

    - name: Install pywb
      become: "{{ sudo | default(true) }}"
      become_user: "{{ owner | default(omit) }}"
      ansible.builtin.pip:
        name: pywb
        virtualenv: "{{ pywb_dir }}/venv"

    - name: deploy nginx configuration for pywb-test
      become: "{{ sudo | default(true) }}"
      copy:
        dest: /etc/nginx/sites-available/pywb-test
        content: |
          server {
            listen 80;
            server_name pywb-test;
            location / {
              proxy_pass http://127.0.0.1:8080;
            }
          }

    - name: deploy nginx configuration for pywb-test
      become: "{{ sudo | default(true) }}"
      copy:
        dest: /etc/nginx/sites-available/pywb-test
        content: |
          server {
            listen 80;
            server_name pywb-test;
            location / {
              proxy_pass http://127.0.0.1:8080;
            }
          }

    - name: set nginx configuration to pywb-test
      become: "{{ sudo | default(true) }}"
      file:
        state: link
        src: /etc/nginx/sites-available/pywb-test
        dest: /etc/nginx/sites-enabled/default

    - name: reload nginx
      become: "{{ sudo | default(true) }}"
      service:
        name: nginx
        state: reloaded

    - name: "Deployment scripts"
      become: "{{ sudo | default(true) }}"
      template:
        owner: "{{ owner | default(omit) }}"
        group: "{{ group | default(omit) }}"
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: u+x
      loop:
        - src: venv.sh
          dest: "{{ pywb_dir }}/venv.sh"

    # - name: "Prepare configuration for static web."
    #   copy:
    #     dest: /home/ansible/seeder/static-nginx.conf
    #     content: |
    #       server {
    #         location /static/ {
    #             root /seeder;
    #         }
    #         location /media/ {
    #             root /seeder;
    #         }

    #         # Increase max upload size to ~50MB
    #         client_max_body_size 53M;

    #         listen 0.0.0.0:80;
    #       }

    # - name: "Deploy Docker Compose"
    #   template:
    #     src: "{{ item.src }}"
    #     dest: "{{ pywb_dir }}/{{ item.dest }}"
    #   loop:
    #     - src: docker-compose.yaml.j2
    #       dest: docker-compose-{{ env }}.yaml
    #     - src: config.yaml
    #       dest: config.yaml

    # - name: "Deployment scripts"
    #   template:
    #     src: "{{ item.src }}"
    #     dest: "{{ item.dest }}"
    #     mode: u+x
    #   loop:
    #     - src: run.sh
    #       dest: "{{ pywb_dir }}/run-{{ env }}.sh"
    #     - src: stop.sh
    #       dest: "{{ pywb_dir }}/stop-{{ env }}.sh"
    #     - src: logs.sh
    #       dest: "{{ pywb_dir }}/logs-{{ env }}.sh"
    #     - src: exec.sh
    #       dest: "{{ pywb_dir }}/exec-{{ env }}.sh"
    #     - src: docker.sh
    #       dest: "{{ pywb_dir }}/docker-{{ env }}.sh"
    #     - src: wb-manager.sh
    #       dest: "{{ pywb_dir }}/wb-manager-{{ env }}.sh"
